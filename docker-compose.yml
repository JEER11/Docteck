version: '3.8'
services:
  nginx:
    image: nginx:1.27-alpine
    ports:
      - "80:80"
      - "443:443"  # HTTPS enabled (ensure certs are mounted and valid)
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./build:/usr/share/nginx/html:ro
  - ./certs:/etc/nginx/certs:ro   # Place fullchain.pem + privkey.pem here for TLS
    depends_on:
      - node-backend
      - flask-service
    # restart: unless-stopped  # optional, recommended in production

  node-backend:
    build: ./server
    env_file:
      - ./.env
    environment:
      - NODE_ENV=production
      - FLASK_URL=http://flask-service:5000
      - PM2_INSTANCES=0
    depends_on:
      - flask-service
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  flask-service:
    build: ./python_server
    env_file:
      - ./.env
    environment:
      - FLASK_ENV=production
      - API_RATE_LIMIT_PER_MINUTE=300
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  celery-worker:
    build: ./python_server
    command: celery -A tasks.celery worker --loglevel=info --concurrency=2
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
      - flask-service

networks:
  default:
    driver: bridge
